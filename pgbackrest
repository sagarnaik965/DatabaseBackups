cat /etc/pgbackrest/pgbackrest.conf 
[global]
repo1-path=/var/lib/pgbackrest
repo1-retention-full=2
repo1-type=posix

[testdb]
pg1-path=/usr/local/pgsql/data


Here‚Äôs a **step-by-step guide** for **pgBackRest installation, configuration, backup, and restore** in one go.  

---

### **1Ô∏è‚É£ Install pgBackRest**
```bash
sudo apt update && sudo apt install -y pgbackrest
```

---

### **2Ô∏è‚É£ Configure PostgreSQL for pgBackRest**
```bash
sudo nano /usr/local/pgsql/data/postgresql.conf
```
**Modify/Add the following lines:**
```
archive_mode = on
archive_command = 'pgbackrest --stanza=testdb archive-push %p'
wal_level = replica
max_wal_senders = 3
hot_standby = on
```
**Save & Exit, then restart PostgreSQL:**
```bash
sudo -u postgres /usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data restart

sudo -u postgres /usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data stop


sudo -u postgres /usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data status

```

---

### **3Ô∏è‚É£ Configure pgBackRest**
```bash
 mkdir -p /etc/pgbackrest
 chmod 750 /etc/pgbackrest
 chown postgres:postgres /etc/pgbackrest

 mkdir -p /var/lib/pgbackrest
 chmod 750 /var/lib/pgbackrest
 chown postgres:postgres /var/lib/pgbackrest

 nano /etc/pgbackrest/pgbackrest.conf

 mkdir -p /var/lib/pgbackrest-1
chown -R postgres:postgres /var/lib/pgbackrest-1
chmod 750 /var/lib/pgbackrest-1
```
**Add the following content:**
```
[global]
repo1-path=/var/lib/pgbackrest
repo1-type=posix
log-level-console=info

[testdb]
pg1-path=/usr/local/pgsql/data
```
**Save & Exit.**

---

### **4Ô∏è‚É£ Create & Verify the Stanza**
```bash
sudo -u postgres pgbackrest --stanza=testdb stanza-create
sudo -u postgres pgbackrest --stanza=testdb check
```

---

### **5Ô∏è‚É£ Perform a Backup**
```bash
sudo -u postgres pgbackrest --stanza=testdb backup
```

---

### **6Ô∏è‚É£ Restore the Backup**
```bash
sudo -u postgres pgbackrest --stanza=testdb restore --delta
```

---

### **7Ô∏è‚É£ Start PostgreSQL**
```bash
sudo systemctl start postgresql
```

---

### **8Ô∏è‚É£ Verify Restore**
```bash
sudo -u postgres psql -c "SELECT now();"
sudo -u postgres psql -c "\l"
sudo -u postgres psql -d your_database -c "\dt"
```

üöÄ **Done!** Your PostgreSQL is backed up and restored using pgBackRest!


Run a full backup:

sudo -u postgres pgbackrest  --stanza=testdb --type=full backup

Run a differential backup:

pgbackrest --stanza=testdb --type=diff backup

Run an incremental backup:

sudo -u postgres pgbackrest --stanza=testdb --type=incr backup

nano /root/.ssh/config
Host pg-container
    HostName 10.210.4.213
    Port 2222
    User postgres

rm -rf /var/lib/pgbackrest-1/*
rm -rf /var/lib/postgresql/data/pg_wal/*

mkdir -p /etc/pgbackrest
touch /etc/pgbackrest/pgbackrest.conf
chmod 640 /etc/pgbackrest/pgbackrest.conf
chown postgres:postgres /etc/pgbackrest/pgbackrest.conf

 mkdir -p /var/log/pgbackrest /var/lib/pgbackrest /tmp/pgbackrest
 chown -R postgres:postgres /var/log/pgbackrest /var/lib/pgbackrest /tmp/pgbackrest
 chmod -R 750 /var/log/pgbackrest /var/lib/pgbackrest /tmp/pgbackrest


sudo apt update && sudo apt install -y vim nano net-tools iputils-ping telnet
 apt install -y pgbackrest

 ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
 ssh-copy-id -i ~/.ssh/id_rsa.pub -p 222 postgres@10.210.4.213


 psql -U admin -d test_db
CREATE USER postgres WITH PASSWORD 'root';


üìå Step 1: Create the students Table
CREATE TABLE students (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    age INT CHECK (age BETWEEN 18 AND 30),
    email VARCHAR(100) UNIQUE,
    enrollment_date DATE DEFAULT CURRENT_DATE
);

üìå Step 2: Insert 100 Random Records
DO $$
DECLARE 
    i INT;
    first_names TEXT[] := ARRAY['John', 'Jane', 'Alex', 'Emily', 'Chris', 'Sophia', 'David', 'Olivia', 'Michael', 'Emma'];
    last_names TEXT[] := ARRAY['Smith', 'Johnson', 'Williams', 'Brown', 'Jones', 'Miller', 'Davis', 'Garcia', 'Rodriguez', 'Martinez'];
BEGIN
    FOR i IN 1..100 LOOP
        INSERT INTO students (first_name, last_name, age, email, enrollment_date)
        VALUES (
            first_names[1 + random() * 9],  -- Random first name
            last_names[1 + random() * 9],   -- Random last name
            18 + random() * 12,             -- Random age between 18 and 30
            CONCAT('student', i, '@example.com'), -- Unique email
            CURRENT_DATE - (random() * 365)::INT -- Random past enrollment date within a year
        );
    END LOOP;
END $$;



