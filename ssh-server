FROM ubuntu:latest

# Install SSH server and utilities
RUN apt-get update && apt-get install -y openssh-server && \
    mkdir /var/run/sshd && \
    echo 'root:root' | chpasswd && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
    echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config

# Expose SSH port
EXPOSE 22

# Start SSH service
CMD ["/usr/sbin/sshd", "-D"]


docker run -d ^
    --name ssh-container ^
    --network pg-network ^
    -p 2222:22 ^
    ssh-server

docker run -d ^
    --name pg-container ^
    --network pg-network ^
    -e POSTGRES_USER=postgres ^
    -e POSTGRES_PASSWORD=postgres ^
    -e POSTGRES_DB=test_db ^
    -v "D:/TECH & SOFT/Docker-Clients/DOCKER-PACKAGING/pgBackRest-try/pgdata:/var/lib/postgresql/data" ^
    -p 5432:5432 ^
    postgres:latest


Step 2: Copy the Public Key to pg-container
Retrieve the public key:
bash
Copy
Edit
cat /root/.ssh/id_rsa.pub
Open another terminal and enter pg-container:
bash
Copy
Edit
docker exec -it pg-container bash
Inside pg-container, create an SSH directory and authorized keys file:
bash
Copy
Edit
mkdir -p /root/.ssh
echo "PASTE_THE_PUBLIC_KEY_HERE" >> /root/.ssh/authorized_keys
chmod 600 /root/.ssh/authorized_keys
chmod 700 /root/.ssh
Ensure the SSH service is installed and running on pg-container:
bash
Copy
Edit
apt update && apt install -y openssh-server
service ssh start
Step 3: Test SSH Connection from ssh-container
Back in ssh-container, try SSH-ing into pg-container:
bash
Copy
Edit
ssh -o StrictHostKeyChecking=no root@pg-container
If it logs in without asking for a password, the setup is successful.



docker exec -it pg-container psql -U postgres -d test_db
CREATE TABLE employees (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    position VARCHAR(50),
    salary DECIMAL(10,2)
);

INSERT INTO employees (name, position, salary) VALUES
('Alice', 'Engineer', 75000),
('Bob', 'Manager', 90000),
('Charlie', 'Analyst', 65000);

SELECT * FROM employees;


Step 2: Configure pgBackRest on ssh-container
2.1 Create pgBackRest Configuration File
Access ssh-container:
bash
Copy
Edit
docker exec -it ssh-container bash
Create configuration file:
bash
Copy
Edit
mkdir -p /etc/pgbackrest
vi /etc/pgbackrest/pgbackrest.conf
Add the following:
ini
Copy
Edit
[global]
repo1-path=/var/lib/pgbackrest
repo1-retention-full=2
start-fast=y

[test_db]
pg1-host=pg-container
pg1-path=/var/lib/postgresql/data
Create backup directory:
bash
Copy
Edit
mkdir -p /var/lib/pgbackrest
chown postgres:postgres /var/lib/pgbackrest
chmod 700 /var/lib/pgbackrest
Step 3: Initialize pgBackRest
Set permissions for postgres user in ssh-container:
bash
Copy
Edit
useradd -m postgres
chown -R postgres:postgres /var/lib/pgbackrest
Run pgBackRest stanza creation:
bash
Copy
Edit
pgbackrest --stanza=test_db --log-level-console=info stanza-create
This initializes the backup structure.

